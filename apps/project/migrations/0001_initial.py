# Generated by Django 4.2.7 on 2025-03-27 21:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EnsayoAguaVapor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ensayo', models.CharField(max_length=255, verbose_name='Nombre del ensayo:')),
                ('fecha_del_ensayo', models.DateTimeField(verbose_name='Fecha del ensayo:')),
                ('descripicion_del_ensayo', models.TextField(verbose_name='Descripción del ensayo')),
            ],
            options={
                'verbose_name': 'Ensayo Agua-Vapor',
                'verbose_name_plural': 'Ensayos Agua-Vapor',
            },
        ),
        migrations.CreateModel(
            name='EnsayoDelCombustible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ensayo', models.CharField(max_length=255, verbose_name='Nombre del ensayo:')),
                ('result_determinacion_de_la_viscosidad', models.FloatField(verbose_name='Resultado de la viscosidad')),
                ('result_determinacion_de_la_temperatura_de_calentamiento', models.FloatField(verbose_name='Resultado de la Temp. de calentamiento')),
                ('result_determinacion_del_valor_calorico', models.FloatField(verbose_name='Resultado del valor calórico')),
                ('result_determinacion_de_la_gravedad_especifica', models.FloatField(verbose_name='Resultado de la gravedad específica')),
                ('fecha_del_ensayo', models.DateTimeField(verbose_name='Fecha del ensayo:')),
                ('descripicion_del_resultado', models.TextField(verbose_name='Descripción del resultado')),
            ],
            options={
                'verbose_name': 'Ensayo del Combustible',
                'verbose_name_plural': 'Ensayos del Combustible',
            },
        ),
        migrations.CreateModel(
            name='EquipamientoDelLaboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador_del_equipo', models.CharField(max_length=255, verbose_name='Identidicador:')),
                ('nombre_del_equipo', models.CharField(max_length=255, verbose_name='Nombre: ')),
                ('fabricante_del_equipo', models.CharField(max_length=255, verbose_name='Fabricante:')),
                ('descripicion_del_equipo', models.CharField(max_length=255, verbose_name='Descripción del equipo:')),
                ('estado_del_equipo', models.CharField(choices=[('Roto', 'Roto'), ('En uso', 'En uso')], max_length=255, verbose_name='Estado del equipo:')),
                ('fecha_de_entrada_del_equipo_al_laboratorio', models.DateField(verbose_name='Fecha de entrada:')),
                ('calibracion_del_equipo', models.FloatField(verbose_name='Calibración:')),
            ],
            options={
                'verbose_name': 'Equipamientos',
                'verbose_name_plural': 'Equipamientos',
            },
        ),
        migrations.CreateModel(
            name='LibroDeInforme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=255, verbose_name='Tipo:')),
            ],
            options={
                'verbose_name': 'Libro de Informe',
                'verbose_name_plural': 'Libros de Informes',
            },
        ),
        migrations.CreateModel(
            name='PrepararSoluciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_de_preparacion_de_la_solucion', models.DateTimeField(verbose_name='Fecha de Prep. de la Sol.:')),
            ],
            options={
                'verbose_name': 'Preparar solución',
                'verbose_name_plural': 'Preparar soluciones',
            },
        ),
        migrations.CreateModel(
            name='Reactivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_del_reactivo', models.CharField(max_length=255, verbose_name='Nombre del reactivo:')),
                ('cantidad_de_disponible', models.FloatField(verbose_name='Cantidad de reactivo:')),
                ('fecha_entrada', models.DateField(verbose_name='Fecha')),
                ('descripicion', models.CharField(max_length=255, verbose_name='Descripción del reactivo')),
            ],
            options={
                'verbose_name': 'Reactivo',
                'verbose_name_plural': 'Reactivos',
            },
        ),
        migrations.CreateModel(
            name='SolucionesPreparadas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador_de_la_solucion_preparada', models.CharField(max_length=255, verbose_name='Identidicador:')),
                ('nombre_de_la_solucion_preparada', models.CharField(max_length=255, verbose_name='Nombre de la Sol. Prep:')),
                ('cantidad_de_la_solucion_preparada', models.FloatField(verbose_name='Cantidad de Sol. Prep:')),
            ],
            options={
                'verbose_name': 'Solución preparada',
                'verbose_name_plural': 'Soluciones preparadas',
            },
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_del_trabajador', models.CharField(max_length=255, verbose_name='Nombre del trabajador:')),
                ('ci', models.CharField(max_length=255, verbose_name='Carné de indentidad: ')),
                ('rol_del_trabajador', models.CharField(max_length=255, verbose_name='Rol del trabajador: ')),
            ],
            options={
                'verbose_name': 'Trabajador',
                'verbose_name_plural': 'Trabajadores',
            },
        ),
        migrations.CreateModel(
            name='Soluciones_Preparadas_Producidas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_de_soluciones_preparada_producidas', models.FloatField(verbose_name='Cantidad Sol. Prep. Producida:')),
                ('preparar_soluciones', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.prepararsoluciones', verbose_name='Preparar soluciones')),
                ('soluciones_preparadas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.solucionespreparadas', verbose_name='Soluciones preparadas')),
            ],
            options={
                'verbose_name': 'Solución prep. producida',
                'verbose_name_plural': 'Soluciones preparadas producidas',
            },
        ),
        migrations.CreateModel(
            name='Reactivo_Consumido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_de_reactivo_consumida', models.FloatField(verbose_name='Cantidad de React. Consumida:')),
                ('preparar_soluciones', models.ManyToManyField(to='project.trabajador', verbose_name='Preparar soluciones')),
                ('reactivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.reactivo', verbose_name='Reactivo')),
            ],
            options={
                'verbose_name': 'Reactivo consumido',
                'verbose_name_plural': 'Reactivos consumidos',
            },
        ),
        migrations.CreateModel(
            name='Informe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_del_informe', models.CharField(max_length=255, verbose_name='Título del informe:')),
                ('fecha_del_informe', models.DateTimeField(verbose_name='Fecha del informe:')),
                ('descripicion_del_informe', models.TextField(verbose_name='Descripción del informe')),
                ('ensayo_aguavapor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.ensayoaguavapor', verbose_name='Ensayo Agua-Vapor')),
                ('ensayo_del_combustible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.ensayodelcombustible', verbose_name='Ensayoo del Combustible')),
                ('libroDeInforme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.librodeinforme', verbose_name='Libro de Informe')),
                ('preparar_soluciones', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.prepararsoluciones', verbose_name='Preparar Soluciones')),
                ('trabajador', models.ManyToManyField(to='project.trabajador', verbose_name='Trabajador')),
            ],
            options={
                'verbose_name': 'Informe',
                'verbose_name_plural': 'Informes',
            },
        ),
        migrations.CreateModel(
            name='EntradaDeReactivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_de_entrada_del_reactivo', models.DateField(verbose_name='Fecha de entrada:')),
                ('cantidad_de_reactivo', models.FloatField(verbose_name='Cantidad de reactivo:')),
                ('reactivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.reactivo', verbose_name='Reactivo')),
            ],
            options={
                'verbose_name': 'Entrada de reactivo',
                'verbose_name_plural': 'Entrada de reactivos',
            },
        ),
        migrations.AddField(
            model_name='ensayodelcombustible',
            name='preparar_soluciones',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.prepararsoluciones', verbose_name='Preparar soluciones'),
        ),
        migrations.AddField(
            model_name='ensayodelcombustible',
            name='trabajador',
            field=models.ManyToManyField(to='project.trabajador', verbose_name='Trabajador'),
        ),
        migrations.AddField(
            model_name='ensayoaguavapor',
            name='preparar_soluciones',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.prepararsoluciones', verbose_name='Preparar soluciones'),
        ),
        migrations.AddField(
            model_name='ensayoaguavapor',
            name='trabajador',
            field=models.ManyToManyField(to='project.trabajador', verbose_name='Trabajador'),
        ),
    ]
